'use client';
import { PropsWithChildren } from 'react';
import { SWRConfig } from 'swr';
import { useAuth } from '@/providers/auth-provider';
import { ApiError } from '@/services/orval-fetch';
import { HTTPExceptionError } from '@/api/methods.schemas';

// If the browser makes an authenticated request without an Authorization: header, the backend will return a 403 with
// a {"detail":"Not authenticated"} payload. This message is generated by the FastAPI OpenIdConnect class.
//
// This will happen when unauthenticated users click deep links that trigger an authenticated response by our SPA.
const isFastApiErrorWorkaround = (error: Error) =>
  error instanceof ApiError &&
  error.response.status === 403 &&
  (error.response.data as HTTPExceptionError).detail === 'Not authenticated';

// Our backend returns 401 when the token is invalid or expired.
const isTokenInvalid = (error: Error) => error instanceof ApiError && error.response.status === 401;

export default function OurSwrConfig({ children }: PropsWithChildren) {
  const auth = useAuth();

  return (
    <SWRConfig
      value={(config) => ({
        ...config,
        onError: (error, key, config) => {
          console.log('Intercepted API error:', { error, key, config });
          if (isTokenInvalid(error) || isFastApiErrorWorkaround(error)) {
            console.log('Backend reports token is missing or invalid.');
            if (auth.isAuthenticated) {
              auth.logout();
            } else {
              auth.reset();
            }
          }
        },
      })}
    >
      {children}
    </SWRConfig>
  );
}
