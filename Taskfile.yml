version: '3'
output: prefixed
env:
  NEXT_TELEMETRY_DISABLED: "1"
  NPM_CONFIG_AUDIT: "false"
  NPM_CONFIG_FUND: "false"
  NPM_CONFIG_UPDATE_NOTIFIER: "false"

  # Sentry doesn't work with Turbopack but we don't care because we don't use Sentry in local development and Turbopack
  # is only being used in local dev. This silences some warnings.
  SENTRY_SUPPRESS_TURBOPACK_WARNING: "1"

  # The OAuth Client Credentials Client ID for handling Google signins on this application (xngin-development-dc).
  # Use this during most development scenarios.
  NEXT_PUBLIC_XNGIN_GOOGLE_CLIENT_ID: "222213100775-qa1ajcrk48il70itcbdcvgr9ib5t08uf.apps.googleusercontent.com"

  # The OAuth Client Credentials Client ID for handling Google signins on this application (evidential-live).
  # Use this only when verifying production environments.
  # NEXT_PUBLIC_XNGIN_GOOGLE_CLIENT_ID: "314428509782-j8fgiq5dvoic01432s2bcu3isinc9kam.apps.googleusercontent.com"

  # The base URL of the xngin API server. Code will append the paths to the API endpoints (e.g. v1/m/apikeys, filters).
  NEXT_PUBLIC_XNGIN_API_BASE_URL: http://localhost:8000
  # The base URL of the xngin OIDC API.
  NEXT_PUBLIC_XNGIN_OIDC_BASE_URL: http://localhost:8000/v1/a/oidc
  # The URL that Google will redirect the user to when authentication is complete. This should be the public-facing URL
  # of the SPA and also should be set as a valid redirect URI in the Google Cloud config for this OAuth Client.
  NEXT_PUBLIC_XNGIN_OIDC_REDIRECT_URI: http://localhost:3000/
tasks:
  nodedeps:
    cmd: |
      CURRENT_NODE_VERSION=$(node --version | sed 's/v//')
      REQUIRED_NODE_VERSION=$(cat .nvmrc)
      if [ "$CURRENT_NODE_VERSION" != "$REQUIRED_NODE_VERSION" ]; then
        echo "Error: node --version of $CURRENT_NODE_VERSION does not match required version $REQUIRED_NODE_VERSION from .nvmrc"
        echo "Tip: Use 'nvm use' to switch to the correct version"
        exit 1
      fi
      npm install
  start:
    desc: "Starts the development server"
    interactive: true
    deps:
      - nodedeps
    cmd: |
      npm run dev
  genapiclient:
    desc: "Updates the generated API client from the apiserver running at http://localhost:8000"
    cmd: |
      curl --max-time 3 -o /tmp/apispec.json http://localhost:8000/openapi.json
      jq . /tmp/apispec.json > openapi.json
      npx orval --config orval.config.ts
      if [ $? -eq 0 ]; then
        echo 'ðŸ‘‰ Run `task lint` to catch any typechecking errors the API changes may have introduced.'
      fi
  lint-next: npx next lint
  lint-tsc: npx tsc --noemit
  lint:
    deps:
      - lint-tsc
      - lint-next
    desc: "Runs the NextJS-managed linter"
  build:
    desc: "Production build of the NextJS application"
    cmd: npm run build
  railway-build:
    desc: "Builds the Docker image used by the Railway deployment."
    cmd: docker build -t xngin-dash -f Dockerfile.railway .
  railway-run:
    desc: "Runs the Docker image in a similar way to how Railway runs it."
    interactive: true
    cmd: docker run --rm -it -p 3000:3000 xngin-dash
